0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.11.4
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/dalton/Projetos/what-type-is',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/dalton/.npm/what-type-is/1.0.1/package.tgz not in flight; packing
9 verbose correctMkdir /home/dalton/.npm correctMkdir not in flight; initializing
10 info lifecycle what-type-is@1.0.1~prepublish: what-type-is@1.0.1
11 silly lifecycle what-type-is@1.0.1~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/dalton/.npm/what-type-is/1.0.1/package.tgz',
12 verbose tar pack   '/home/dalton/Projetos/what-type-is' ]
13 verbose tarball /home/dalton/.npm/what-type-is/1.0.1/package.tgz
14 verbose folder /home/dalton/Projetos/what-type-is
15 verbose addLocalTarball adding from inside cache /home/dalton/.npm/what-type-is/1.0.1/package.tgz
16 verbose correctMkdir /home/dalton/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd what-type-is@1.0.1
18 verbose afterAdd /home/dalton/.npm/what-type-is/1.0.1/package/package.json not in flight; writing
19 verbose correctMkdir /home/dalton/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/dalton/.npm/what-type-is/1.0.1/package/package.json written
21 silly publish { name: 'what-type-is',
21 silly publish   version: '1.0.1',
21 silly publish   description: 'A simple type checking library for Node.js',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: './node_modules/mocha/bin/mocha' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/daltonmenezes/what-type-is.git' },
21 silly publish   keywords: [ 'type', 'checking', 'lib', 'js', 'what', 'is' ],
21 silly publish   author: { name: 'Dalton Menezes' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/daltonmenezes/what-type-is/issues' },
21 silly publish   homepage: 'https://github.com/daltonmenezes/what-type-is#readme',
21 silly publish   devDependencies: { chai: '^4.1.2', mocha: '^4.0.1' },
21 silly publish   readme: '<p align="center"><img src="https://cdn.pixabay.com/photo/2016/03/08/07/08/question-1243504__340.png"/></p>\n<h1 align="center">What Type Is?</h1>\n<p align="center">A simple type checking library for Node.js</>\n\n<p align="center"><a href="https://github.com/daltonmenezes/uni/blob/master/LICENSE"><img src="https://img.shields.io/github/license/mashape/apistatus.svg" alt="license"/></a></p>\n\n## Example\n```js\nconst { isObject, isPlainObject, isArray, isUndefined } = require(\'what-type-is\')\n\nisObject([]) // true\nisPlainObject([]) // false\nisArray([\'array\']) // true\nisUndefined(null) // false\n```\n\n## Installation\n```\nnpm i --save what-type-is\n```\n\n## Usage\nYou can import all functions or import it on-demand using destructuring assignment\n\n### Importing all functions\n```js\nconst it = require(\'what-type-is\')\nconst message = \'Hello\'\n\nconsole.log(\n  it.isString(message)\n) // true\n```\n### Importing on-demand\nThis is a great way to import only what you need to use. You can import any functions available using destructuring assignment. Just take a look at [API section](#api) to know all functions you can use and import it on-demand.\n```js\nconst { isArray, isObject, isPlainObject isFunction } = require(\'what-type-is\')\nconst messages = [\'Hello\', \'World\', \'How are you?\']\n\nconsole.log(\n  isArray(messages)\n) // true\n\nconsole.log(\n  isObject(messages)\n) // true\n\nconsole.log(\n  isPlainObject(messages)\n) // false\n\nconsole.log(\n  isFunction(messages)\n) // false\n```\n\n\n## API\n\n| Function | Argument | Return |Example |\n| --- | --- | --- |--- |\n| isArray | value to check | boolean  | `isArray([\'array\'])` |\n| isString | value to check | boolean | `isString(\'String\')` |\n| isNumber | value to check | boolean | `isNumber(10)` |\n| isBoolean | value to check | boolean | `isBoolean(true)` |\n| isObject | value to check | boolean | `isObject({})` |\n| isPlainObject | value to check | boolean | `isObject({})` |\n| isFunction | value to check | boolean | `isFunction(()=>{})` |\n| isDate | value to check | boolean | `isDate(new Date)` |\n| isRegExp | value to check | boolean | `isRegExp(new RegExp)` |\n| isNull | value to check | boolean | `isNull(null)` |\n| isUndefined | value to check | boolean | `isUndefined(undefined)` |\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '3fc1b0a405e14e487095ab3776d61a459255c0a6',
21 silly publish   _id: 'what-type-is@1.0.1',
21 silly publish   _shasum: 'b277400d7cd6b17daeaef5d985125d121b1496a6',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name what-type-is
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'what-type-is',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'what-type-is',
26 silly mapToRegistry   name: 'what-type-is',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/what-type-is
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/dalton/.npm/what-type-is/1.0.1/package.tgz
30 verbose request uri https://registry.npmjs.org/what-type-is
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:33:27 AM
33 verbose request using bearer token for auth
34 verbose request id 6797854c47440379
35 http request PUT https://registry.npmjs.org/what-type-is
36 http 403 https://registry.npmjs.org/what-type-is
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '91',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 26 Oct 2017 13:33:28 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-gru17120-GRU',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1509024808.747613,VS0,VE400',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /home/dalton/.npm/registry.npmjs.org/what-type-is on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published version 1.0.1. : what-type-is
40 verbose stack     at makeError (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid what-type-is
43 verbose cwd /home/dalton/Projetos/what-type-is
44 error Linux 4.4.0-97-generic
45 error argv "/usr/bin/node" "/usr/bin/npm" "publish"
46 error node v6.11.4
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published version 1.0.1. : what-type-is
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
